// Generated by CoffeeScript 1.8.0
(function() {
  var async, express, http, router, settings;

  express = require('express');

  http = require('http');

  async = require('async');

  require('date-utils');

  settings = require('../settings');

  router = express.Router();

  router.get('/', function(req, res, next) {
    if (!req.session.user) {
      res.redirect('/login');
    }
    return next();
  });

  router.get('/', function(req, res) {
    var getInfoDirect, tasks;
    getInfoDirect = function(path) {
      var buffers;
      buffers = [];
      return function(callback) {
        var get;
        get = http.get('http://127.0.0.1:9085' + path, function(res) {
          res.on('data', function(data) {
            return buffers.push(data);
          });
          return res.on('end', function() {
            return callback(null, buffers.toString());
          });
        });
        return get.on('error', function(err) {
          return callback(err);
        });
      };
    };
    tasks = {
      status: getInfoDirect('/qora/status'),
      blockHeight: getInfoDirect('/blocks/height'),
      isUpToDate: getInfoDirect('/qora/isuptodate'),
      peers: getInfoDirect('/peers'),
      blockTime: getInfoDirect('/blocks/time'),
      generatingBalance: getInfoDirect('/blocks/generatingbalance'),
      trasactionsNet: getInfoDirect('/transactions/network'),
      blockLast: getInfoDirect('/blocks/last')
    };
    return async.parallel(tasks, function(err, results) {
      if (err) {
        res.render('index', {
          title: 'error',
          message: "Get info failed , Plea make sure you have start the qora without -disablerpc ",
          err: true
        });
        return;
      }
      results.blockLast = JSON.parse(results.blockLast);
      results.peers = JSON.parse(results.peers);
      results.blockTime = new Date(Number(results.blockLast.timestamp) + Number(results.blockTime) * 1000).toFormat('YYYY-MM-DD HH24:MI:SS');
      results.blockLast.timestamp = new Date(results.blockLast.timestamp).toFormat('YYYY-MM-DD HH24:MI:SS');
      return res.render('index', {
        title: "Qora Monitor",
        message: results,
        err: false
      });
    });
  });

  router.get('/login', function(req, res) {
    return res.render('login', {
      titlt: "Log IN"
    });
  });

  router.post('/login', function(req, res) {
    console.log(req.body);
    if (settings.loginPwd === req.body.pwd && settings.loginUserName === req.body.user) {
      req.session.user = req.body.user;
      return res.redirect('/');
    } else {
      return res.redirect('/login');
    }
  });

  module.exports = router;

}).call(this);

//# sourceMappingURL=index.js.map
